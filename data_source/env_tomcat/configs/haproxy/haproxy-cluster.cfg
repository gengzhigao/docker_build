#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local3
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          400s
    timeout server          400s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 30000
        

listen  mysql-cluster
        bind 127.0.1.1:43306
        mode tcp
        option mysql-check user haproxy
        option tcplog
        balance roundrobin
        server mysql1 mysql-1:3306 check port 3306 inter 10s
        server mysql2 mysql-2:3306 check port 3306 inter 10s backup

listen  redis-cluster
        bind 127.0.1.1:46379
        mode tcp
        option tcp-check
        tcp-check send AUTH\ appcan.cn\r\n
        tcp-check expect string +OK
        tcp-check send PING\r\n
        tcp-check expect string +PONG
        tcp-check send info\ replication\r\n
        tcp-check expect string role:master
        tcp-check send QUIT\r\n
        tcp-check expect string +OK
        server redis1 redis-1:6379 check inter 2s
        server redis2 redis-2:6379 check inter 2s
        server redis3 redis-3:6379 check inter 2s

listen stats
        mode http
        bind 0.0.0.0:8089
        stats enable
        stats uri /dbs
        stats realm Global\ statistics
        stats auth admin:admin

listen  mongo-cluster
        bind 127.0.1.1:47017
        mode tcp
        option tcp-check
        tcp-check send-binary 3d00000007000000
        tcp-check send-binary 00000000d4070000
        tcp-check send-binary 0000000074657374
        tcp-check send-binary 2e24636d64000000
        tcp-check send-binary 0000ffffffff1700
        tcp-check send-binary 00000169734d6173
        tcp-check send-binary 7465720000000000
        tcp-check send-binary 0000f03f
        tcp-check send-binary 00 
        tcp-check expect binary 69736d61737465720001
        balance roundrobin
        server mongo1 mongo-master:27017 check port 27017 inter 2s
        server mongo2 mongo-slave:27017 check port 27017 inter 2s

